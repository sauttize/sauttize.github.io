/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Pencil: THREE.Mesh
    Eraser: THREE.Mesh
    PencilSharpener: THREE.Mesh
  }
  materials: Record<string, never>
}

export function SchoolSupplies(props: React.ComponentProps<'group'>) {
  const { nodes } = useGLTF('/models/pencil_and.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pencil.geometry}
        material={nodes.Pencil.material}
        scale={0.074}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Eraser.geometry}
        material={nodes.Eraser.material}
        position={[0, 0.402, -0.326]}
        rotation={[-0.971, 0.42, 0.13]}
        scale={[0.137, 0.059, 0.286]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PencilSharpener.geometry}
        material={nodes.PencilSharpener.material}
        position={[0.086, 0.56, 0.277]}
        rotation={[1.095, 0, -0.797]}
        scale={[0.101, 0.069, 0.208]}
      />
    </group>
  )
}

useGLTF.preload('/pencil_and.glb')
