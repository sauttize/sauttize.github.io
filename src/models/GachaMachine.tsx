/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Buttons: THREE.Mesh
    Glass: THREE.Mesh
    Cube: THREE.Mesh
    Cube_1: THREE.Mesh
    Cube_2: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder001_1: THREE.Mesh
    Cylinder001_2: THREE.Mesh
  }
  materials: {
    ['Controller.001']: THREE.MeshStandardMaterial
    Vidrio: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    Controller: THREE.MeshStandardMaterial
    ['Controller.002']: THREE.MeshStandardMaterial
    Contoller2: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export function GachaMachine(props: React.ComponentProps<'group'>) {
  const { nodes, materials } = useGLTF('/models/gacha_machine.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Buttons.geometry}
        material={materials['Controller.001']}
        position={[1.002, 1.906, 1.508]}
        scale={0.14}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Glass.geometry}
        material={materials.Vidrio}
        position={[0.007, 3.453, 0.991]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={1.505}
      />
      <group position={[-0.681, 2.051, 1.38]} scale={[0.055, 0.349, 0.055]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials.Controller}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001_1.geometry}
          material={materials.Contoller2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001_2.geometry}
          material={materials['Material.001']}
        />
      </group>
      <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials.Material} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube_1.geometry}
        material={materials.Controller}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube_2.geometry}
        material={materials['Controller.002']}
      />
    </group>
  )
}

useGLTF.preload('/gacha_machine.glb')
