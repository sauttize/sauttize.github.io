/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    handler_og: THREE.Mesh
    top: THREE.Mesh
  }
  materials: Record<string, never>
}

export function Pickaxe(props: React.ComponentProps<'group'>) {
  const { nodes } = useGLTF('/models/pickaxe.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.handler_og.geometry}
        material={nodes.handler_og.material}
        position={[0, 0, -0.009]}
        scale={0.194}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.top.geometry}
        material={nodes.top.material}
        position={[-0.054, 4.435, 0.028]}
        rotation={[1.572, 0, 0]}
        scale={[0.429, 2.805, 0.429]}
      />
    </group>
  )
}

useGLTF.preload('/pickaxe.glb')
