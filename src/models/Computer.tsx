/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Monitor001: THREE.Mesh
    PC: THREE.Mesh
    button_001: THREE.Mesh
    keyboard: THREE.Mesh
    cable_keyboard: THREE.Mesh
    keyboard001: THREE.Mesh
    mouse: THREE.Mesh
    cable_mouse: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export function Computer(props: React.ComponentProps<'group'>) {
  const { nodes, materials } = useGLTF('/models/computer.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Monitor001.geometry}
        material={materials.Material}
      />
      <mesh castShadow receiveShadow geometry={nodes.PC.geometry} material={nodes.PC.material} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.button_001.geometry}
        material={nodes.button_001.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keyboard.geometry}
        material={nodes.keyboard.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cable_keyboard.geometry}
        material={nodes.cable_keyboard.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.keyboard001.geometry}
        material={nodes.keyboard001.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mouse.geometry}
        material={nodes.mouse.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cable_mouse.geometry}
        material={nodes.cable_mouse.material}
      />
    </group>
  )
}

useGLTF.preload('/computer.glb')
